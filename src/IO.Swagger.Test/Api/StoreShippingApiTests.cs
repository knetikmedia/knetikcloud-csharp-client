/* 
 * Knetik Platform API Documentation Latest
 *
 * This is the spec for the Knetik API.  Use this in conjunction with the documentation found at https://demo.sandbox.knetikcloud.com
 *
 * OpenAPI spec version: Latest
 * Contact: support@knetik.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using IO.Swagger.Client;
using IO.Swagger.Api;
using IO.Swagger.Model;

namespace IO.Swagger.Test
{
    /// <summary>
    ///  Class for testing StoreShippingApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class StoreShippingApiTests
    {
        private StoreShippingApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new StoreShippingApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of StoreShippingApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' StoreShippingApi
            //Assert.IsInstanceOfType(typeof(StoreShippingApi), instance, "instance is a StoreShippingApi");
        }

        
        /// <summary>
        /// Test CreateShippingItemUsingPOST
        /// </summary>
        [Test]
        public void CreateShippingItemUsingPOSTTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ShippingItem shippingItem = null;
            //var response = instance.CreateShippingItemUsingPOST(shippingItem);
            //Assert.IsInstanceOf<ShippingItem> (response, "response is ShippingItem");
        }
        
        /// <summary>
        /// Test CreateShippingTemplateUsingPOST
        /// </summary>
        [Test]
        public void CreateShippingTemplateUsingPOSTTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ItemTemplateResource shippingTemplateResource = null;
            //var response = instance.CreateShippingTemplateUsingPOST(shippingTemplateResource);
            //Assert.IsInstanceOf<ItemTemplateResource> (response, "response is ItemTemplateResource");
        }
        
        /// <summary>
        /// Test DeleteShippingItemUsingDELETE
        /// </summary>
        [Test]
        public void DeleteShippingItemUsingDELETETest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? id = null;
            //instance.DeleteShippingItemUsingDELETE(id);
            
        }
        
        /// <summary>
        /// Test DeleteShippingTemplateUsingDELETE
        /// </summary>
        [Test]
        public void DeleteShippingTemplateUsingDELETETest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //string cascade = null;
            //instance.DeleteShippingTemplateUsingDELETE(id, cascade);
            
        }
        
        /// <summary>
        /// Test GetShippingItemUsingGET
        /// </summary>
        [Test]
        public void GetShippingItemUsingGETTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? id = null;
            //var response = instance.GetShippingItemUsingGET(id);
            //Assert.IsInstanceOf<ShippingItem> (response, "response is ShippingItem");
        }
        
        /// <summary>
        /// Test GetShippingTemplateUsingGET
        /// </summary>
        [Test]
        public void GetShippingTemplateUsingGETTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //var response = instance.GetShippingTemplateUsingGET(id);
            //Assert.IsInstanceOf<ItemTemplateResource> (response, "response is ItemTemplateResource");
        }
        
        /// <summary>
        /// Test GetShippingTemplatesUsingGET
        /// </summary>
        [Test]
        public void GetShippingTemplatesUsingGETTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? size = null;
            //int? page = null;
            //string order = null;
            //var response = instance.GetShippingTemplatesUsingGET(size, page, order);
            //Assert.IsInstanceOf<PageItemTemplateResource> (response, "response is PageItemTemplateResource");
        }
        
        /// <summary>
        /// Test UpdateShippingItemUsingPUT
        /// </summary>
        [Test]
        public void UpdateShippingItemUsingPUTTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? id = null;
            //ShippingItem shippingItem = null;
            //instance.UpdateShippingItemUsingPUT(id, shippingItem);
            
        }
        
        /// <summary>
        /// Test UpdateShippingTemplateUsingPUT
        /// </summary>
        [Test]
        public void UpdateShippingTemplateUsingPUTTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //ItemTemplateResource shippingTemplateResource = null;
            //instance.UpdateShippingTemplateUsingPUT(id, shippingTemplateResource);
            
        }
        
    }

}
