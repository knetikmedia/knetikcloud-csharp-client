/* 
 * Knetik Platform API Documentation latest 
 *
 * This is the spec for the Knetik API.  Use this in conjunction with the documentation found at https://demo.sandbox.knetikcloud.com
 *
 * OpenAPI spec version: latest 
 * Contact: support@knetik.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using IO.Swagger.Client;
using IO.Swagger.Api;
using IO.Swagger.Model;

namespace IO.Swagger.Test
{
    /// <summary>
    ///  Class for testing AuthClientsApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class AuthClientsApiTests
    {
        private AuthClientsApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new AuthClientsApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of AuthClientsApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' AuthClientsApi
            //Assert.IsInstanceOfType(typeof(AuthClientsApi), instance, "instance is a AuthClientsApi");
        }

        
        /// <summary>
        /// Test AssignClientGrantTypesUsingPUT
        /// </summary>
        [Test]
        public void AssignClientGrantTypesUsingPUTTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string clientKey = null;
            //List<string> grantList = null;
            //instance.AssignClientGrantTypesUsingPUT(clientKey, grantList);
            
        }
        
        /// <summary>
        /// Test AssignClientRedirectUrisUsingPUT
        /// </summary>
        [Test]
        public void AssignClientRedirectUrisUsingPUTTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string clientKey = null;
            //List<string> redirectList = null;
            //instance.AssignClientRedirectUrisUsingPUT(clientKey, redirectList);
            
        }
        
        /// <summary>
        /// Test CreateClientUsingPOST
        /// </summary>
        [Test]
        public void CreateClientUsingPOSTTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ClientResource clientResource = null;
            //var response = instance.CreateClientUsingPOST(clientResource);
            //Assert.IsInstanceOf<ClientResource> (response, "response is ClientResource");
        }
        
        /// <summary>
        /// Test DeleteClientUsingDELETE
        /// </summary>
        [Test]
        public void DeleteClientUsingDELETETest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string clientKey = null;
            //instance.DeleteClientUsingDELETE(clientKey);
            
        }
        
        /// <summary>
        /// Test GetClientUsingGET
        /// </summary>
        [Test]
        public void GetClientUsingGETTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string clientKey = null;
            //var response = instance.GetClientUsingGET(clientKey);
            //Assert.IsInstanceOf<ClientResource> (response, "response is ClientResource");
        }
        
        /// <summary>
        /// Test GetClientsUsingGET
        /// </summary>
        [Test]
        public void GetClientsUsingGETTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? size = null;
            //int? page = null;
            //string order = null;
            //var response = instance.GetClientsUsingGET(size, page, order);
            //Assert.IsInstanceOf<PageResourceClientResource> (response, "response is PageResourceClientResource");
        }
        
        /// <summary>
        /// Test ListAvailableGrantTypesUsingGET
        /// </summary>
        [Test]
        public void ListAvailableGrantTypesUsingGETTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.ListAvailableGrantTypesUsingGET();
            //Assert.IsInstanceOf<List<GrantTypeResource>> (response, "response is List<GrantTypeResource>");
        }
        
        /// <summary>
        /// Test UpdateClientUsingPUT
        /// </summary>
        [Test]
        public void UpdateClientUsingPUTTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string clientKey = null;
            //ClientResource clientResource = null;
            //instance.UpdateClientUsingPUT(clientKey, clientResource);
            
        }
        
    }

}
