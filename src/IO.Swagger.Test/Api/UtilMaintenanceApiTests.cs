/* 
 * Knetik Platform API Documentation Latest
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: Latest
 * Contact: support@knetik.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using IO.Swagger.Client;
using IO.Swagger.Api;
using IO.Swagger.Model;

namespace IO.Swagger.Test
{
    /// <summary>
    ///  Class for testing UtilMaintenanceApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class UtilMaintenanceApiTests
    {
        private UtilMaintenanceApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new UtilMaintenanceApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of UtilMaintenanceApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' UtilMaintenanceApi
            //Assert.IsInstanceOfType(typeof(UtilMaintenanceApi), instance, "instance is a UtilMaintenanceApi");
        }

        
        /// <summary>
        /// Test DeleteUsingDELETE1
        /// </summary>
        [Test]
        public void DeleteUsingDELETE1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.DeleteUsingDELETE1();
            
        }
        
        /// <summary>
        /// Test GetUsingGET1
        /// </summary>
        [Test]
        public void GetUsingGET1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.GetUsingGET1();
            //Assert.IsInstanceOf<Maintenance> (response, "response is Maintenance");
        }
        
        /// <summary>
        /// Test PostUsingPOST
        /// </summary>
        [Test]
        public void PostUsingPOSTTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Maintenance maintenance = null;
            //instance.PostUsingPOST(maintenance);
            
        }
        
        /// <summary>
        /// Test PostUsingPUT
        /// </summary>
        [Test]
        public void PostUsingPUTTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Maintenance maintenance = null;
            //instance.PostUsingPUT(maintenance);
            
        }
        
    }

}
