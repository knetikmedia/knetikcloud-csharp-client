/* 
 * Knetik Platform API Documentation latest 
 *
 * This is the spec for the Knetik API.  Use this in conjunction with the documentation found at https://demo.sandbox.knetikcloud.com
 *
 * OpenAPI spec version: latest 
 * Contact: support@knetik.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using IO.Swagger.Client;
using IO.Swagger.Api;
using IO.Swagger.Model;

namespace IO.Swagger.Test
{
    /// <summary>
    ///  Class for testing UsersGroupsApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class UsersGroupsApiTests
    {
        private UsersGroupsApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new UsersGroupsApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of UsersGroupsApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' UsersGroupsApi
            //Assert.IsInstanceOfType(typeof(UsersGroupsApi), instance, "instance is a UsersGroupsApi");
        }

        
        /// <summary>
        /// Test AddGroupUsingPOST
        /// </summary>
        [Test]
        public void AddGroupUsingPOSTTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //GroupResource groupResource = null;
            //var response = instance.AddGroupUsingPOST(groupResource);
            //Assert.IsInstanceOf<GroupResource> (response, "response is GroupResource");
        }
        
        /// <summary>
        /// Test AddMemberUsingPOST
        /// </summary>
        [Test]
        public void AddMemberUsingPOSTTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string uniqueName = null;
            //GroupMemberResource username = null;
            //var response = instance.AddMemberUsingPOST(uniqueName, username);
            //Assert.IsInstanceOf<GroupMemberResource> (response, "response is GroupMemberResource");
        }
        
        /// <summary>
        /// Test CreateGroupTemplateUsingPOST
        /// </summary>
        [Test]
        public void CreateGroupTemplateUsingPOSTTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //TemplateResource groupTemplateResource = null;
            //var response = instance.CreateGroupTemplateUsingPOST(groupTemplateResource);
            //Assert.IsInstanceOf<TemplateResource> (response, "response is TemplateResource");
        }
        
        /// <summary>
        /// Test DeleteGroupMemberUsingDELETE
        /// </summary>
        [Test]
        public void DeleteGroupMemberUsingDELETETest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string uniqueName = null;
            //int? userId = null;
            //instance.DeleteGroupMemberUsingDELETE(uniqueName, userId);
            
        }
        
        /// <summary>
        /// Test DeleteGroupTemplateUsingDELETE
        /// </summary>
        [Test]
        public void DeleteGroupTemplateUsingDELETETest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //string cascade = null;
            //instance.DeleteGroupTemplateUsingDELETE(id, cascade);
            
        }
        
        /// <summary>
        /// Test DeleteGroupUsingDELETE
        /// </summary>
        [Test]
        public void DeleteGroupUsingDELETETest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string uniqueName = null;
            //instance.DeleteGroupUsingDELETE(uniqueName);
            
        }
        
        /// <summary>
        /// Test GetGroupListUsingGET
        /// </summary>
        [Test]
        public void GetGroupListUsingGETTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? userId = null;
            //var response = instance.GetGroupListUsingGET(userId);
            //Assert.IsInstanceOf<List<string>> (response, "response is List<string>");
        }
        
        /// <summary>
        /// Test GetGroupMemberUsingGET
        /// </summary>
        [Test]
        public void GetGroupMemberUsingGETTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string uniqueName = null;
            //int? userId = null;
            //var response = instance.GetGroupMemberUsingGET(uniqueName, userId);
            //Assert.IsInstanceOf<GroupMemberResource> (response, "response is GroupMemberResource");
        }
        
        /// <summary>
        /// Test GetGroupTemplateUsingGET
        /// </summary>
        [Test]
        public void GetGroupTemplateUsingGETTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //var response = instance.GetGroupTemplateUsingGET(id);
            //Assert.IsInstanceOf<TemplateResource> (response, "response is TemplateResource");
        }
        
        /// <summary>
        /// Test GetGroupTemplatesUsingGET
        /// </summary>
        [Test]
        public void GetGroupTemplatesUsingGETTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? size = null;
            //int? page = null;
            //string order = null;
            //var response = instance.GetGroupTemplatesUsingGET(size, page, order);
            //Assert.IsInstanceOf<PageResourceTemplateResource> (response, "response is PageResourceTemplateResource");
        }
        
        /// <summary>
        /// Test GetGroupUsingGET
        /// </summary>
        [Test]
        public void GetGroupUsingGETTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string uniqueName = null;
            //var response = instance.GetGroupUsingGET(uniqueName);
            //Assert.IsInstanceOf<GroupResource> (response, "response is GroupResource");
        }
        
        /// <summary>
        /// Test SearchGroupsUsingGET
        /// </summary>
        [Test]
        public void SearchGroupsUsingGETTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string uniqueName = null;
            //int? size = null;
            //int? page = null;
            //string order = null;
            //var response = instance.SearchGroupsUsingGET(uniqueName, size, page, order);
            //Assert.IsInstanceOf<PageResourceGroupMemberResource> (response, "response is PageResourceGroupMemberResource");
        }
        
        /// <summary>
        /// Test SearchGroupsUsingGET1
        /// </summary>
        [Test]
        public void SearchGroupsUsingGET1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? size = null;
            //int? page = null;
            //string order = null;
            //var response = instance.SearchGroupsUsingGET1(size, page, order);
            //Assert.IsInstanceOf<PageResourceGroupResource> (response, "response is PageResourceGroupResource");
        }
        
        /// <summary>
        /// Test UpdateGroupTemplateUsingPUT
        /// </summary>
        [Test]
        public void UpdateGroupTemplateUsingPUTTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //TemplateResource groupTemplateResource = null;
            //instance.UpdateGroupTemplateUsingPUT(id, groupTemplateResource);
            
        }
        
        /// <summary>
        /// Test UpdateGroupUsingPUT
        /// </summary>
        [Test]
        public void UpdateGroupUsingPUTTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string uniqueName = null;
            //GroupResource groupResource = null;
            //instance.UpdateGroupUsingPUT(uniqueName, groupResource);
            
        }
        
        /// <summary>
        /// Test UpdateMemberStatusUsingPUT
        /// </summary>
        [Test]
        public void UpdateMemberStatusUsingPUTTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string uniqueName = null;
            //int? userId = null;
            //string status = null;
            //instance.UpdateMemberStatusUsingPUT(uniqueName, userId, status);
            
        }
        
    }

}
