/* 
 * Knetik Platform API Documentation Latest
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: Latest
 * Contact: support@knetik.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using IO.Swagger.Client;
using IO.Swagger.Api;
using IO.Swagger.Model;

namespace IO.Swagger.Test
{
    /// <summary>
    ///  Class for testing SearchApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class SearchApiTests
    {
        private SearchApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new SearchApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of SearchApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' SearchApi
            //Assert.IsInstanceOfType(typeof(SearchApi), instance, "instance is a SearchApi");
        }

        
        /// <summary>
        /// Test ExternalAddUsingPOST
        /// </summary>
        [Test]
        public void ExternalAddUsingPOSTTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string type = null;
            //string id = null;
            //Object _object = null;
            //instance.ExternalAddUsingPOST(type, id, _object);
            
        }
        
        /// <summary>
        /// Test ExternalDeleteAllUsingDELETE
        /// </summary>
        [Test]
        public void ExternalDeleteAllUsingDELETETest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string type = null;
            //instance.ExternalDeleteAllUsingDELETE(type);
            
        }
        
        /// <summary>
        /// Test ExternalDeleteUsingDELETE
        /// </summary>
        [Test]
        public void ExternalDeleteUsingDELETETest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string type = null;
            //string id = null;
            //instance.ExternalDeleteUsingDELETE(type, id);
            
        }
        
        /// <summary>
        /// Test ExternalRegisterUsingPOST
        /// </summary>
        [Test]
        public void ExternalRegisterUsingPOSTTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //List<SearchReferenceMapping> mappings = null;
            //instance.ExternalRegisterUsingPOST(mappings);
            
        }
        
        /// <summary>
        /// Test SearchUsingPOST
        /// </summary>
        [Test]
        public void SearchUsingPOSTTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string type = null;
            //Object query = null;
            //int? size = null;
            //int? page = null;
            //string order = null;
            //var response = instance.SearchUsingPOST(type, query, size, page, order);
            //Assert.IsInstanceOf<PageMapstringobject> (response, "response is PageMapstringobject");
        }
        
    }

}
